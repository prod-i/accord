{"version":3,"sources":["components/Dialogs/Messages/HeaderMessages/HeaderMessages.jsx","components/Dialogs/Messages/ContentMessages/MessageItem/MessageItem.jsx","components/Dialogs/Messages/ContentMessages/ContentMessages.jsx","components/Dialogs/Messages/CreateMessages/CreateMessageForm/CreateMessageForm.jsx","components/Dialogs/Messages/CreateMessages/CreateMessages.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/List/List.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["HeaderMessages","props","className","onClick","сheckShowMode","src","alt","MessageItem","message","ContentMessages","messagesListItem","messagesData","map","item","key","id","maxLen","maxLength","CreateMessageForm","onSubmit","handleSubmit","aria-hidden","Field","component","Textarea","name","placeholder","validate","required","CreateMessages","AddMessageFormRedux","reduxForm","form","values","addMessage","valueMessageText","Messages","updateValueMessageText","DialogItem","to","activeClassName","List","dialogsListItem","listData","Dialogs","useState","showMode","setShowMode","condition","mapStateToPropsRedirect","state","isAuth","auth","compose","connect","dialogs","dialogsData","Component","RedirectComponent","this","React"],"mappings":"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","file":"static/js/3.c5efe5aa.chunk.js","sourcesContent":["import React from 'react';\r\nimport './HeaderMessages.css';\r\n\r\n\r\n\r\n\r\nconst HeaderMessages = (props) => {\r\n    return (\r\n        <div className=\"messages__header\">\r\n            <div className=\"arow\" onClick={()=>{props.сheckShowMode(false)}}>{`<--`}</div>\r\n            <div className=\"messages__item_avatar\">\r\n                <img src=\"https://sun9-49.userapi.com/c845122/v845122315/18e5e0/iAoBtrsGeFo.jpg\" className=\"messages__item_avatar avatar\" alt=\"avatar\" />\r\n            </div>  {/* avatar */}\r\n\r\n            <div className=\"messages__user_info\">\r\n                <h2 className=\"dialogs__item_name\">Test 1</h2>\r\n                <p className=\"dialogs__item_time\">1 minute ago</p>\r\n            </div>  {/* name */}\r\n\r\n            <div className=\"messages__settings\">\r\n                ●●●\r\n            </div>  {/* settings */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HeaderMessages;","import React from 'react';\r\nimport './MessageItem.css';\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div className=\"message__wrapper\">\r\n            <div className=\"message__item\">{props.message}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MessageItem;","import React from 'react';\r\nimport './ContentMessages.css';\r\nimport MessageItem from './MessageItem/MessageItem';\r\n\r\nconst ContentMessages = (props) => {\r\n\r\n    let messagesListItem = props.messagesData\r\n        .map(item => <MessageItem key={item.id} id={item.id} message={item.message} />);\r\n\r\n    return (\r\n        <div className=\"messages__content\">\r\n            {messagesListItem}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContentMessages;","import React from 'react';\r\nimport './CreateMessageForm.css';\r\nimport { Field } from 'redux-form';\r\nimport { Textarea } from '../../../../common/FormsControls/FormsControls';\r\nimport {maxLength, required} from '../../../../../utils/validators/validators';\r\n\r\nconst maxLen = maxLength(1500);\r\nconst CreateMessageForm = (props) => {\r\n    return (\r\n        <form className=\"form_message\" onSubmit={props.handleSubmit}>\r\n\r\n            <div className=\"add__img\"><i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i></div>     {/* add document */}\r\n\r\n            <div className=\"CreateMessageWrapper\">\r\n                <Field component={Textarea} name={'valueMessageText'} className='new_message' placeholder={'Новое сообщение...'} validate={[required, maxLen]} />\r\n            </div>\r\n\r\n            <button className=\"add__voice\"><i className=\"fa fa-paper-plane\" aria-hidden=\"true\"></i></button>\r\n\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default CreateMessageForm;","import React from 'react';\r\nimport './CreateMessages.css';\r\nimport CreateMessageForm from './CreateMessageForm/CreateMessageForm';\r\nimport { reduxForm } from 'redux-form';\r\n\r\nconst CreateMessages = (props) => {\r\n    const AddMessageFormRedux = reduxForm({ form: 'CreateMessageForm' })(CreateMessageForm)\r\n    const addMessage = (values) => {\r\n        props.addMessage(values.valueMessageText);\r\n    }\r\n    return (\r\n        <div className=\"messages_create_message\">\r\n\r\n            <AddMessageFormRedux onSubmit={addMessage} />\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateMessages;","import React from 'react';\r\nimport './Messages.css';\r\nimport HeaderMessages from './HeaderMessages/HeaderMessages';\r\nimport ContentMessages from './ContentMessages/ContentMessages';\r\nimport CreateMessages from './CreateMessages/CreateMessages';\r\n\r\n\r\n\r\n\r\nconst Messages = (props) => {\r\n    return (\r\n        <div className=\"messages\">\r\n            <HeaderMessages сheckShowMode={props.сheckShowMode}/>\r\n\r\n            <ContentMessages \r\n                messagesData={props.messagesData}\r\n            />\r\n\r\n            <CreateMessages \r\n                valueMessageText={props.valueMessageText}\r\n                addMessage={props.addMessage}\r\n                updateValueMessageText={props.updateValueMessageText}\r\n            />\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Messages;","import React from 'react';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport './List.css';\r\n\r\nconst DialogItem = (props) => {\r\n    let src = \"/dialogs/\" + props.id;\r\n    return (\r\n        <NavLink to={src} className=\"dialogs__item\" activeClassName='active' onClick={() => {props.сheckShowMode(true)}}>\r\n            <div className=\"dialogs__item_avatar\">\r\n                <img src=\"https://sun9-49.userapi.com/c845122/v845122315/18e5e0/iAoBtrsGeFo.jpg\" className=\"dialogs__item_avatar avatar\" alt=\"avatar\" />\r\n            </div>\r\n            <div className=\"item__wrapper\">\r\n                <div className=\"dialogs__item_info\">\r\n                    <h2 className=\"dialogs__item_name\">{props.name}</h2>\r\n                    <p className=\"dialogs__item_time\">1 minute ago</p>\r\n                </div>\r\n                <div className=\"dialogs__minimessage\">\r\n                    <p className=\"dialogs__minimessage_text\">Привет, я хотел спроси...</p>\r\n                </div>\r\n            </div>\r\n        </NavLink>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst List = (props) => {\r\n    let state = props.listData;\r\n    let dialogsListItem = state\r\n        .map((item) => <DialogItem key={item.id} name={item.name} id={item.id} сheckShowMode={props.сheckShowMode}/>);\r\n\r\n    return (\r\n        <div className=\"dialogs__list\">\r\n            {dialogsListItem}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default List;","import React, { useState } from 'react';\r\nimport './Dialogs.css';\r\nimport Messages from './Messages/Messages';\r\nimport List from './List/List';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    const [showMode, setShowMode] = useState(false);\r\n    const сheckShowMode = (condition) =>{\r\n        setShowMode(condition);\r\n    }\r\n    return (\r\n        <div className=\"Dialogs\">\r\n            <div className=\"container\">\r\n                <div className=\"dialogs__wrapper wrapper\">\r\n                    <div className=\"dialogs__wrapper wrapper\">\r\n                        {!showMode\r\n                        ?   <>\r\n                                <List \r\n                                    listData={props.listData}\r\n                                    сheckShowMode={сheckShowMode}\r\n                                />\r\n                                <div className='selectDialog'>Выбирите диалог</div>\r\n                            </>\r\n                        :   <>\r\n                                <Messages \r\n                                    messagesData={props.messagesData} \r\n                                    addMessage={props.addMessage}\r\n                                    сheckShowMode={сheckShowMode}\r\n                                />\r\n                            </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { addMessage} from './../../redux/dialogsReducer';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => { \r\n    return {\r\n        listData: state.dialogs.dialogsData,\r\n        messagesData: state.dialogs.messagesData,\r\n    }\r\n}\r\n\r\nexport default compose\r\n    (\r\n    connect(mapStateToProps, {addMessage}),\r\n    withAuthRedirect,\r\n    )(Dialogs);;"],"sourceRoot":""}