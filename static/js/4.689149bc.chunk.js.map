{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","assets/users_avatar/users-avatar.svg","components/Profile/Info/ProfileStatusWithHooks.js","components/Profile/Info/ProfileDataForm.jsx","components/Profile/Info/Info.jsx","components/Profile/Avatar/Avatar.jsx","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/PostForm/PostForm.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","onDoubleClick","spellcheck","onChange","e","currentTarget","onBlur","updateStatus","autoFocus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","createField","Input","type","keys","contacts","map","key","ProfileData","isOwner","runToEditMode","showMode","setShowMode","fullName","lookingForAJob","contactTitle","contactValue","onClick","Contact","Info","saveProfile","initialValues","formData","then","Preloader","Avatar","src","photos","large","userAvatar","alt","id","target","files","savePhoto","htmlFor","Post","name","content","aria-hidden","like","comment","maxLen","maxLength","PostForm","Field","component","Textarea","placeholder","validate","required","Posts","React","memo","postsListItem","posts","postsData","item","reverse","PostInputForm","values","addPost","newPostText","Profile","ProfileContainer","usersId","this","match","params","userId","authorizedUserId","history","getProfileTC","getStatusTC","refrashProfile","prevProps","updateStatusTC","Component","compose","connect","state","auth","isAuth","setUserProfile","withRouter"],"mappings":"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","file":"static/js/4.689149bc.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","module.exports = __webpack_public_path__ + \"static/media/users-avatar.5e946c20.svg\";","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n                <div className=\"profile__status\">\r\n                    <span onDoubleClick={activateEditMode} className=\"profile__status\"> {status || 'create status'} </span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div className=\"profile__status\">\r\n                    <input className='status_input' spellcheck=\"false\" onChange={onStatusChange} onBlur={deActivateEditMode} autoFocus={true} value={status}/> \r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport { createField, Input, Textarea } from '../../common/FormsControls/FormsControls';\r\nimport { reduxForm } from 'redux-form';\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n    return (\r\n        <form className='profile__info' onSubmit={handleSubmit}>\r\n            <div className=\"profile__name_wrapper\">\r\n                <div className=\"profile__info_descr info_checkbox\"><h1 className=\"profile__name\">{createField('Full name', 'fullName', [], Input)}</h1></div>\r\n                <p className=\"online\">● online</p>\r\n            </div>\r\n            <div className='warn formError'>\r\n                {error}\r\n            </div>\r\n                                            <div className=\"profile__info_list\">\r\n                                                            <div className=\"profile__info_item\">\r\n                                                                <div className=\"profile__info_descr\">Relationship</div>\r\n                                                                <div className=\"info_relationship info_checkbox\">{createField('', 'lookingForAJob', [], Input, { type: \"checkbox\" })}</div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"profile__info_item\">\r\n                                                                <div className=\"profile__info_descr\">About me</div> \r\n                                                                <div className=\"profile__info_descr info_input\">{createField('', 'aboutMe', [], Input)}</div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"profile__info_item\">\r\n                                                                <div className=\"profile__info_descr\">Looking for a job description </div>\r\n                                                                <div className=\"profile__info_descr info_input\">{createField('my', 'lookingForAJobDescription', [], Input)}</div>\r\n                                                            </div>\r\n\r\n                                                            <div>{Object.keys(profile.contacts).map(key => {\r\n                                                                return (\r\n                                                                    <div key={key} className=\"profile__info_item\">\r\n                                                                        <div className=\"profile__info_descr\">{key}</div> \r\n                                                                        <div className=\"profile__info_descr info_input\">{createField(key, 'contacts.' + key, [], Input)}</div>\r\n                                                                    </div>\r\n                                                                )\r\n                                                            })}</div>\r\n                                                            <button className='save_info'>save</button>\r\n                                            </div>\r\n\r\n        </form>\r\n    );\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React, { useState, useEffect } from 'react';\r\nimport './Info.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\nconst Info = ({ profile, status, updateStatus, isOwner, saveProfile }) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(() => {\r\n            setEditMode(false);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"profile__info wrapper\">\r\n            {!profile\r\n                ? <Preloader />\r\n                : <>\r\n                    {editMode\r\n                        ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                        : <ProfileData profile={profile} isOwner={isOwner} status={status} updateStatus={updateStatus} runToEditMode={() => { setEditMode(true) }} />\r\n                    }\r\n                </>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ProfileData = ({ profile, isOwner, runToEditMode, status, updateStatus }) => {\r\n    const [showMode, setShowMode] = useState(false);\r\n\r\n    return (\r\n        <div className='profile__info'>\r\n            <div className=\"profile__name_info_wrapper\">\r\n                <div className=\"profile__name_wrapper\">\r\n                    <h1 className=\"profile__name\">{profile.fullName}</h1>\r\n                    <p className=\"online\">● online</p>\r\n                </div>\r\n                <ProfileStatusWithHooks\r\n                    status={status}\r\n                    updateStatus={updateStatus}\r\n                />\r\n            </div>\r\n\r\n    \r\n            <div className=\"profile_detailInfo\">\r\n                <div className=\"profile__info_item\">Relationship: <span className='info_relationship'> {profile.lookingForAJob ? 'yes' : 'no'} </span></div>\r\n                {showMode ? <div className=\"profile__info_i\">{Object.keys(profile.contacts).map(key => <Contact className='profile__info_items' key={key} contactTitle={key} contactValue={profile.contacts[key]} />)}</div>\r\n                    : <></>\r\n                }\r\n            </div>\r\n\r\n            <div className=\"profile__info_optionsMode\">\r\n                {showMode ? <span className='showInfo' onClick={() => { setShowMode(false) }}>hidden info</span>\r\n                          : <span className='showInfo' onClick={() => { setShowMode(true) }}>show Info</span>}\r\n                {isOwner && <span className='editInfo' onClick={runToEditMode}>EDIT</span>}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return <div className=\"profile__info_item\"><div className=\"profile__info_descr\">{contactTitle}</div> <div className=\"profile__info_items info_input\">{contactValue}</div></div>\r\n}\r\n\r\nexport default Info;","import React from 'react';\r\nimport './Avatar.css';\r\nimport userAvatar from '../../../assets/users_avatar/users-avatar.svg';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\n\r\n\r\n\r\nconst Avatar = (props) => {\r\n    const onMainPhotoSelected = (e) => {\r\n        if(e.target.files.length){\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"profile__avatar wrapper\">\r\n            {!props.profile ? <Preloader />\r\n                : <>\r\n                    <div className=\"profile_avatar_img_wrap\"><img src={!props.profile.photos.large ? userAvatar : props.profile.photos.large} className=\"profile__avatar_img\" alt=\"avatar\" /></div>\r\n                    {props.isOwner \r\n                    ? <>\r\n                        <input type='file' id='input__file' className=\"profile__photo\" onChange={onMainPhotoSelected}/>\r\n                        <label htmlFor=\"input__file\" className=\"profile__edit\">\r\n                            <span>update photo</span>\r\n                        </label>\r\n                     </>\r\n                    : \r\n                        <label htmlFor=\"input__file\" className=\"profile__edit\">\r\n                            <span>follow</span>\r\n                        </label>\r\n                    }\r\n                </>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Avatar;","import React from 'react';\r\nimport './Post.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className=\"profile_posts wrapper item\">\r\n            <div className=\"profile__headerPost\">\r\n                <div className=\"profile__headerPost_wrapper\">\r\n                    <div className=\"profile__postAvatar\">\r\n                        <img src=\"https://sun9-49.userapi.com/c845122/v845122315/18e5e0/iAoBtrsGeFo.jpg\" alt=\"\" className=\"profile__postAvatar avatar\"/>\r\n                    </div>\r\n                    <div>\r\n                        <h2 className=\"profile__namePost\">{props.name}</h2>\r\n                        <p className=\"profile__post_time\">1 minute ago</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"profile__settingsPost\">●●●</div>\r\n            </div>\r\n            <div className=\"profile__postBody\">\r\n                    {props.content}\r\n                    {/* /CONTENT */}\r\n            </div>\r\n            <div className=\"profile_postFoother\">\r\n    <div className=\"profile__postFeedback like\"><i className=\"fa fa-heart\" aria-hidden=\"true\"></i> {props.like}</div>\r\n    <div className=\"profile__postFeedback comment\"><i className=\"fa fa-comment\" aria-hidden=\"true\"></i> {props.comment}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Post;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './PostForm.css';\r\nimport {Field} from 'redux-form';\r\nimport {maxLength, required} from '../../../../utils/validators/validators';\r\nimport { Textarea } from '../../../common/FormsControls/FormsControls';\r\n\r\nconst maxLen = maxLength(1000);\r\n\r\nconst PostForm = (props) => {\r\n    return (\r\n        <form className=\"profile__inputPost_wrapper\" onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name={'newPostText'} className='profile__newpost' placeholder={'new post...'} validate={[required, maxLen]} />\r\n            <button className=\"profile__newpost_add\">add</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default PostForm;","import React from 'react';\r\nimport './Posts.css';\r\nimport Post from './Post/Post';\r\nimport PostForm from './PostForm/PostForm';\r\nimport { reduxForm } from 'redux-form';\r\n\r\nconst Posts = React.memo(props => {\r\n    let postsListItem = [...props.posts.postsData]\r\n        .map(item => <Post key={item.id} id={item.id} name={item.name} content={item.content} like={item.like} comment={item.comment} />).reverse();\r\n\r\n    const PostInputForm = reduxForm({ form: 'Post' })(PostForm);\r\n    const add = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"profile__createPost wrapper\">\r\n                <p>New post</p>\r\n                <PostInputForm onSubmit={add} />\r\n            </div>\r\n\r\n            <div className=\"posts__wrapper\">\r\n                {postsListItem}\r\n            </div>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default Posts;","import React from 'react';\r\nimport './Profile.css';\r\nimport Info from './Info/Info';\r\nimport Avatar from './Avatar/Avatar';\r\nimport Posts from './Posts/Posts';\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className=\"Profile\">\r\n            <div className=\"container\">\r\n                <div className=\"profile__user\">\r\n                    {!props.profile.profile ? <Preloader />\r\n                        : <>\r\n            \r\n                            <Avatar profile={props.profile.profile} isOwner={props.isOwner} savePhoto={props.savePhoto}/>\r\n\r\n                            <div className=\"profile__inner\">\r\n\r\n                                <Info\r\n                                    profile={props.profile.profile}\r\n                                    status={props.status}\r\n                                    updateStatus={props.updateStatus}\r\n                                    isOwner={props.isOwner}\r\n                                    saveProfile={props.saveProfile}\r\n                                />\r\n                                <Posts\r\n                                    posts={props.profile}\r\n                                    addPost={props.addPost}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport { setUserProfile, getProfileTC, getStatusTC, updateStatusTC, addPost, savePhoto, saveProfile } from '../../redux/profileReducer';\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refrashProfile(){\r\n        let usersId = this.props.match.params.userId;\r\n        if (!usersId) {\r\n            usersId = this.props.authorizedUserId;\r\n            if(!usersId){\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getProfileTC(usersId);\r\n        this.props.getStatusTC(usersId);\r\n    }\r\n    componentDidMount() {\r\n        this.refrashProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(this.props.match.params.userId != prevProps.match.params.userId)\r\n        this.refrashProfile();\r\n    }\r\n    render() {\r\n        return (\r\n            // !this.props.isAuth ? <Redirect to='/login' /> : \r\n            \r\n            <Profile {...this.props}\r\n                isOwner      ={!this.props.match.params.userId}\r\n                profile      ={this.props.profile}\r\n                posts        ={this.props.posts}\r\n                status       ={this.props.status}\r\n                updateStatus ={this.props.updateStatusTC}\r\n                addPost      ={this.props.addPost}\r\n                saveProfile  ={this.props.saveProfile}\r\n                savePhoto    ={this.props.savePhoto}\r\n            />\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profile,\r\n    status: state.profile.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose\r\n    (\r\n        connect(mapStateToProps, { setUserProfile, getProfileTC, getStatusTC, updateStatusTC, addPost, savePhoto, saveProfile}),\r\n        withRouter,\r\n    )(ProfileContainer);"],"sourceRoot":""}