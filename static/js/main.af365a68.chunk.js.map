{"version":3,"sources":["redux/dialogsReducer.js","api/api.js","utils/object-helpers.js","redux/usersReducer.js","serviceWorker.js","redux/headerReducer.js","redux/authReducer.js","redux/appReducer.js","redux/redux.js","hoc/withSuspense.js","components/Login/LoginForm/LoginForm.jsx","components/Login/Login.jsx","components/Header/Navbar/Navbar.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","App.js","index.js","utils/validators/validators.js","components/common/FormsControls/FormsControls.js","components/common/Preloader/Preloader.jsx","redux/profileReducer.js"],"names":["initialState","dialogsData","id","name","messagesData","message","addMessage","valueMessageText","type","dialogsReducer","state","action","newMessage","instans","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageUsersSize","get","follow","post","unfollow","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","savePhoto","file","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","updateObjectInArray","items","itemId","objPropName","newObjProps","map","item","FOLLOW","usersData","totalUsersCount","isFetching","followingProgres","userId","unFollow","setCurrentPage","toggleIsFetching","toggleIsFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreater","a","data","resultCode","getUsersTC","response","users","totalCount","followTC","bind","unfollowTC","usersReducer","followed","filter","Boolean","window","location","hostname","match","headerReducer","isAuth","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","authTC","url","authReducer","initialized","appReducer","redusers","combineReducers","profileReducer","dialogs","header","auth","app","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","_store_","withSuspense","Component","props","fallback","maxLen","maxLength","LoginForm","handleSubmit","error","className","onSubmit","Field","placeholder","component","Input","validate","required","src","LoginReduxForm","reduxForm","connect","messages","length","stopSubmit","_error","to","remmemberMe","Navbar","activeClassName","aria-hidden","Header","useState","showMenu","setShowMenu","onClick","class","HeaderContainer","this","React","ProfileContainer","lazy","DialogsContainer","UsersContainer","NewsContainer","SettingsContainer","App","catchAllUnhandledErrors","promiseRejectionEvent","initializeApp","addEventListener","removeEventListener","path","render","exact","Preloader","AppContainer","withRouter","promise","Promise","all","then","AppRouterContainer","basename","process","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","value","FormControl","input","meta","touched","children","hasError","Textarea","restProps","child","createField","placehloder","validators","text","ADD_POST","postsData","content","like","comment","addPost","setUserProfile","setStatus","getProfileTC","getStatusTC","updateStatusTC","photos","getState","reject","p","postId"],"mappings":"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","file":"static/js/main.af365a68.chunk.js","sourcesContent":["const ADD_MESSAGE = 'dialogs/ADD_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        { id: 1, name: 'Test 1', },\r\n        { id: 2, name: 'Test 2', },\r\n        { id: 3, name: 'Test 3', },\r\n        { id: 4, name: 'Test 4', },\r\n        { id: 5, name: 'Test 5', },\r\n    ],\r\n    messagesData: [\r\n        { id: 1, message: \"Hi friend, let's go play games, and then I'm bored\", },\r\n        { id: 2, message: \"Hi, go\", },\r\n    ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let newMessage = action.valueMessageText;\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, { id: \"5\", message: newMessage, }],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addMessage = (valueMessageText) => ({ type: ADD_MESSAGE, valueMessageText });\r\n\r\nexport default dialogsReducer;","import * as axios from 'axios';\r\n\r\nconst instans = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '1293ddc9-210a-41ce-ae0b-4a2c4eb36d24',\r\n    },\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageUsersSize = 10) {\r\n        return instans.get(`users?page=${currentPage}&count=${pageUsersSize}`)\r\n    },\r\n    follow(id) {\r\n        return instans.post(`follow/${id}`)\r\n    },\r\n    unfollow(id) {\r\n        return instans.delete(`follow/${id}`)\r\n    },\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(id) {\r\n        return instans.get(`profile/${id}`)\r\n    },\r\n    getStatus(id) {\r\n        return instans.get(`profile/status/${id}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instans.put(`profile/status`, { status: status })\r\n    },\r\n    savePhoto(file) {\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n        return instans.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instans.put(`profile`, profile)\r\n    },\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instans.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe=false, captcha=null) {\r\n        return instans.post(`auth/login`, { email, password, rememberMe, captcha })\r\n    },\r\n    logout() {\r\n        return instans.delete(`auth/login`)\r\n    },\r\n};\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instans.get(`security/get-captcha-url`);\r\n    },\r\n};\r\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(item => {\r\n        if (item[objPropName] === itemId) {\r\n            return { ...item, ...newObjProps}\r\n        }\r\n        return item;\r\n    });\r\n}","import { usersAPI } from '../api/api';\r\nimport { updateObjectInArray } from '../utils/object-helpers';\r\n\r\nconst FOLLOW = 'users/FOLLOW';\r\nconst UNFOLLOW = 'users/UNFOLLOW';\r\nconst SET_USERS = 'users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'users/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'users/TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    usersData: [],\r\n    pageUsersSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingProgres: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                usersData: updateObjectInArray(state.usersData, action.userId, 'id', {followed: true}),\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                usersData: updateObjectInArray(state.usersData, action.userId, 'id', {followed: false}),\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                usersData: action.users,\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage,\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount,\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingProgres: action.isFetching\r\n                    ? [...state.followingProgres, action.userId]\r\n                    : state.followingProgres.filter(id => id != action.userId),\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const follow = (userId) => ({ type: FOLLOW, userId });\r\nexport const unFollow = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, totalUsersCount });\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId });\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreater) => {\r\n    dispatch(toggleIsFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreater(userId));\r\n    }\r\n    dispatch(toggleIsFollowingProgress(false, userId));\r\n}\r\n\r\nexport const getUsersTC = (currentPage, pageUsersSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(currentPage));\r\n\r\n        let response = await usersAPI.getUsers(currentPage, pageUsersSize)\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(response.data.items));\r\n        dispatch(setTotalUsersCount(response.data.totalCount));\r\n    }\r\n}\r\nexport const followTC = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), follow);\r\n    }\r\n}\r\nexport const unfollowTC = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unFollow);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","\r\nlet initialState = {};\r\n\r\nconst headerReducer = (state = initialState, action) => {\r\n    \r\n    \r\n\r\n    return state;\r\n}\r\n\r\nexport default headerReducer;","import { authAPI, securityAPI } from '../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst SET_AUTH_USER_DATA = 'auth/SET_AUTH_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null, //if null, then captcha is not required\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData      =(id, email, login, isAuth) => ({ type: SET_AUTH_USER_DATA,      payload: { id, email, login, isAuth } });\r\nexport const getCaptchaUrlSuccess =(captchaUrl)               => ({ type: GET_CAPTCHA_URL_SUCCESS, payload: { captchaUrl } });\r\n\r\nexport const authTC = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let { id, email, login } = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(authTC());\r\n    } else {\r\n        if(response.data.resultCode === 10){\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        let messages = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\r\n        dispatch(stopSubmit('login', { _error: messages }));\r\n    }\r\n}\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import { authTC } from './authReducer';\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const InitiaziedSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(authTC());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(InitiaziedSuccess());\r\n        });\r\n}\r\n\r\nexport default appReducer;","import { combineReducers, createStore, applyMiddleware, compose } from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport headerReducer from \"./headerReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./appReducer\";\r\n\r\n\r\nlet redusers = combineReducers({\r\n    profile: profileReducer, \r\n    dialogs: dialogsReducer,\r\n    header: headerReducer,\r\n    users: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(redusers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow._store_ = store;\r\n\r\nexport default store;","import React, { Suspense } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<div>Загрузка...</div>}>\r\n            <Component {...props} />\r\n        </Suspense>\r\n    }\r\n}","import React from 'react';\r\nimport './LoginForm.css';\r\nimport { Field } from 'redux-form';\r\nimport { Input } from '../../common/FormsControls/FormsControls';\r\nimport { required, maxLength } from '../../../utils/validators/validators';\r\n\r\nconst maxLen = maxLength(30);\r\nconst LoginForm = ({ handleSubmit, error, captchaUrl }) => {\r\n    return (\r\n        <form className='Login_form' onSubmit={handleSubmit}>\r\n            <div className='warn'>\r\n                <Field className='Login_login' placeholder={'Email'} name={'email'} component={Input} validate={[required, maxLen]} />\r\n            </div>\r\n            <div className='warn'>\r\n                <Field className='Login_password' type='password' placeholder={'Password'} name={'password'} component={Input} validate={[required, maxLen]} />\r\n            </div>\r\n            <div className='warn formError'>\r\n                {error}\r\n            </div>\r\n            <div className='warn'>\r\n                <Field className='Login_remember' type={'checkbox'} name={'remmemberMe'} component={'input'} /> remember me\r\n            </div>\r\n            \r\n            {captchaUrl && <img src={captchaUrl}/>}\r\n            {captchaUrl && <Field name={'captcha'} component={'input'} />}\r\n            <div className='warn'>\r\n                <button className='Login_button'>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport './Login.css';\r\nimport LoginForm from './LoginForm/LoginForm';\r\nimport { reduxForm } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/authReducer';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = ({login, isAuth, captchaUrl}) => {\r\n    const onSubmit = (formData) => {\r\n        login(formData.email, formData.password, formData.remmemberMe, formData.captcha)\r\n    }\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n    return (\r\n        <div className=\"Login\">\r\n            <p className=\"Login_Title\">sign in</p>\r\n\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl}/>\r\n\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth,\r\n})\r\nexport default connect(mapStateToProps, { login })(Login);","import React from 'react';\r\nimport './Navbar.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n                <nav className=\"header__nav nav\">\r\n                    <NavLink to=\"/profile\" className=\"nav__link user\" activeClassName='active'><i className=\"fa fa-user\" aria-hidden=\"true\"></i></NavLink>           {/* profile */ }\r\n                    <NavLink to=\"/dialogs\" className=\"nav__link message\" activeClassName='active'><i className=\"fa fa-comment\" aria-hidden=\"true\"></i></NavLink>     {/* dialogs */ }\r\n                    <NavLink to=\"/users\" className=\"nav__link friends\" activeClassName='active'><i className=\"fa fa-users\" aria-hidden=\"true\"></i></NavLink>         {/* users */   }\r\n                    <NavLink to=\"/news\" className=\"nav__link news\" activeClassName='active'><i className=\"fa fa-book\" aria-hidden=\"true\"></i></NavLink>              {/* news */    }\r\n                    <NavLink to=\"/settings\" className=\"nav__link setting\" activeClassName='active'><i className=\"fa fa-cog\" aria-hidden=\"true\"></i></NavLink>        {/* settings */}\r\n                </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React, { useState, useEffect } from 'react';\r\nimport './Header.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Navbar from './Navbar/Navbar';\r\n\r\nconst Header = (props) => {\r\n    const [showMenu, setShowMenu] = useState(false)\r\n    return (\r\n        <header className=\"Header\">\r\n            <div className=\"header__wrapper\">\r\n\r\n                <div className=\"header__logo logo\"><NavLink to=\"/\" activeClassName='active'>accord</NavLink></div>\r\n                {!showMenu\r\n                ?   <div className=\"burger\">\r\n                        {!props.isAuth ? <></> : <Navbar />}\r\n\r\n                        <div className=\"header__login\">\r\n                            {props.isAuth ? <NavLink to={'/login'}><button className='header_login__b' onClick={props.logout}>log out</button></NavLink> : <NavLink to={'/login'}>log in</NavLink>}\r\n                        </div>\r\n                    </div>\r\n                :   <div className=\"burger active\">\r\n                        {!props.isAuth ? <></> : <Navbar />}\r\n\r\n                        <div className=\"header__login\">\r\n                            {props.isAuth ? <NavLink to={'/login'}><button className='header_login__b' onClick={props.logout}>log out</button></NavLink> : <NavLink to={'/login'}>log in</NavLink>}\r\n                        </div>\r\n                    </div>\r\n                }\r\n                    \r\n\r\n                <div class=\"nav-toggle\" onClick={() => {setShowMenu(!showMenu)}}>\r\n                    <span class=\"nav-toggle-item\"></span>\r\n                </div>\r\n            </div>\r\n        </header >\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {logout} from '../../redux/authReducer';\r\nimport Header from './Header';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        if (!this.props.isAuth) return <Redirect to='/login' />\r\n        return <Header {...this.props} />\r\n    }\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    login: state.auth.login,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React, { Suspense } from 'react';\r\nimport { compose } from 'redux';\r\nimport './App.css';\r\nimport { connect } from 'react-redux';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/redux';\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { withSuspense } from './hoc/withSuspense';\r\nimport { initializeApp } from './redux/appReducer';\r\nimport Login from './components/Login/Login';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\n\r\nconst ProfileContainer     = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst DialogsContainer     = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst UsersContainer       = React.lazy(() => import('./components/Users/UsersContainer'));\r\nconst NewsContainer        = React.lazy(() => import('./components/News/NewsContainer'));\r\nconst SettingsContainer    = React.lazy(() => import('./components/Settings/SettingsContainer'));\r\n\r\n\r\nclass App extends React.Component {\r\n  catchAllUnhandledErrors = (promiseRejectionEvent) => {\r\n    // alert('Some error occured')\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n    window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors);\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors);\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />\r\n    }\r\n    return (\r\n      <div className=\"accord\">\r\n        \r\n            <Route path='/' render={() => <HeaderContainer />} />\r\n\r\n        <div className=\"app__loading_content\">\r\n          <Switch>\r\n\r\n            <Route exact path='/'           render={() => <Redirect to='/profile' />} />  \r\n            \r\n            <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}   />\r\n\r\n            <Route path='/dialogs'          render={withSuspense(DialogsContainer)}   />\r\n\r\n            <Route path='/users'            render={withSuspense(UsersContainer)}     />\r\n\r\n            <Route path='/news'             render={withSuspense(NewsContainer)}      />\r\n\r\n            <Route path='/settings'         render={withSuspense(SettingsContainer)}  />\r\n\r\n            <Route path='/login'            render={() => <Login />}      />\r\n\r\n            <Route path='*'                 render={() => <div>404</div>} />\r\n\r\n          </Switch>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized,\r\n});\r\n\r\nconst AppContainer = compose(\r\n  withRouter,\r\n  connect(mapStateToProps, { initializeApp })\r\n)(App)\r\n\r\nconst AppRouterContainer = () => {\r\n  return (\r\n    <HashRouter basename={process.env.PUBLIC_URL}>\r\n      <Provider store={store}>\r\n\r\n        <AppContainer />\r\n\r\n      </Provider>\r\n    </HashRouter>\r\n  )\r\n}\r\n\r\nexport default AppRouterContainer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\nimport AppRouterContainer from './App';\r\n\r\n\r\n\r\nReactDOM.render(<AppRouterContainer />, document.getElementById('root'));\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();","import React from 'react';\r\n\r\nexport const required = (value) => {\r\n    if(value) return undefined\r\n    return <></>\r\n}\r\nexport const maxLength = (maxLength) => (value) => {\r\n    if(value && value.length > maxLength) return `Max Length ${maxLength}`\r\n    return undefined;\r\n}\r\n","import React from 'react';\r\nimport './FormsControls.css';\r\nimport { Field } from 'redux-form';\r\n\r\n\r\nconst FormControl = ({ input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <>\r\n            {children}\r\n            {hasError && <span className='warning'>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return (\r\n        <FormControl {...props}><textarea {...input} {...restProps} className={props.className} /></FormControl>\r\n    )\r\n}\r\nexport const Input = (props) => {\r\n    const { input, meta: {touched, error}, child, ...restProps } = props;\r\n    return (<FormControl {...props}><input {...input} {...restProps} className={touched && error ? 'Login_login required' : 'Login_login'} /></FormControl>\r\n    )\r\n}\r\n\r\nexport const createField = (placehloder, name, validators, component, props = {}, text = '') => (\r\n    <div>\r\n        <Field placeholder={placehloder} name={name} validate={validators} component={component} {...props} /> {text}\r\n    </div>\r\n)","import React from 'react';\r\nimport './Preloader.css'\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <div className=\"loadingio-spinner-bean-eater-zh50mit3vgi preloader\"><div className=\"ldio-aloarrpey8o\">\r\n            <div><div></div><div></div><div></div></div><div><div></div><div></div><div></div></div>\r\n        </div></div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import { usersAPI, profileAPI } from '../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst ADD_POST           ='profile/ADD_POST';\r\nconst DELETE_POST        ='profile/DELETE_POST';\r\nconst SET_USER_PROFILE   ='profile/SET_USER_PROFILE';\r\nconst SET_STATUS         ='profile/SET_STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'profile/SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        { id: 1, name: \"Alexandr Gluhov\", content: \"Hello World!\", like: \"5\", comment: \"3\" },\r\n        { id: 2, name: \"Alexandr Gluhov\", content: \"I'm crying because I realized that I like the work of Justin Bieber\", like: \"12\", comment: \"1\" },\r\n    ],\r\n    profile: null,\r\n    status: '',\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, { id: \"5\", name: \"Alexandr Gluhov\", content: action.text, like: \"8\", comment: \"3\", }],\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                postsData: state.postsData.filter(p => p.id != action.postId),\r\n            };\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos},\r\n            };\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n            };\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport const addPost =          (text)    => ({ type: ADD_POST,           text });\r\nexport const deletePost =       (postId)  => ({ type: DELETE_POST,        postId });\r\nexport const setUserProfile =   (profile) => ({ type: SET_USER_PROFILE,   profile });\r\nexport const setStatus =        (status)  => ({ type: SET_STATUS,         status });\r\nexport const savePhotoSuccess = (photos)  => ({ type: SAVE_PHOTO_SUCCESS, photos });\r\n\r\nexport const getProfileTC = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\nexport const getStatusTC = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\nexport const updateStatusTC = (status) => async (dispatch) => {\r\n    try{\r\n        let response = await profileAPI.updateStatus(status);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    } catch(error){\r\n        // alert(error.message)\r\n    }\r\n}\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const id = getState().auth.id;\r\n    const response = await profileAPI.saveProfile(profile);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getProfileTC(id));\r\n    } else {\r\n        dispatch(stopSubmit('edit-profile', { _error: response.data.messages[0] }));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}