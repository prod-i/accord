{"version":3,"sources":["assets/users_avatar/users-avatar.svg","components/Profile/Info/ProfileStatusWithHooks.js","components/Profile/Info/ProfileDataForm.jsx","components/Profile/Info/Info.jsx","components/Profile/Avatar/Avatar.jsx","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/PostForm/PostForm.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","onDoubleClick","spellcheck","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","createField","Input","type","Object","keys","contacts","map","key","ProfileData","isOwner","runToEditMode","showMode","setShowMode","fullName","lookingForAJob","contactTitle","contactValue","onClick","Contact","Info","saveProfile","initialValues","formData","then","Preloader","Avatar","src","photos","large","userAvatar","alt","id","target","files","length","savePhoto","htmlFor","Post","name","content","aria-hidden","like","comment","maxLen","maxLength","PostForm","Field","component","Textarea","placeholder","validate","required","Posts","React","memo","postsListItem","posts","postsData","item","reverse","PostInputForm","values","addPost","newPostText","Profile","ProfileContainer","usersId","this","match","params","userId","authorizedUserId","history","push","getProfileTC","getStatusTC","refrashProfile","prevProps","updateStatusTC","Component","compose","connect","state","auth","isAuth","setUserProfile","withRouter"],"mappings":"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","file":"static/js/4.657fa8af.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/users-avatar.5e946c20.svg\";","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n                <div className=\"profile__status\">\r\n                    <span onDoubleClick={activateEditMode} className=\"profile__status\"> {status || 'create status'} </span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div className=\"profile__status\">\r\n                    <input className='status_input' spellcheck=\"false\" onChange={onStatusChange} onBlur={deActivateEditMode} autoFocus={true} value={status}/> \r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport { createField, Input, Textarea } from '../../common/FormsControls/FormsControls';\r\nimport { reduxForm } from 'redux-form';\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n    return (\r\n        <form className='profile__info' onSubmit={handleSubmit}>\r\n            <div className=\"profile__name_wrapper\">\r\n                <div className=\"profile__info_descr info_checkbox\"><h1 className=\"profile__name\">{createField('Full name', 'fullName', [], Input)}</h1></div>\r\n                <p className=\"online\">‚óè online</p>\r\n            </div>\r\n            <div className='warn formError'>\r\n                {error}\r\n            </div>\r\n                                            <div className=\"profile__info_list\">\r\n                                                            <div className=\"profile__info_item\">\r\n                                                                <div className=\"profile__info_descr\">Relationship</div>\r\n                                                                <div className=\"info_relationship info_checkbox\">{createField('', 'lookingForAJob', [], Input, { type: \"checkbox\" })}</div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"profile__info_item\">\r\n                                                                <div className=\"profile__info_descr\">About me</div> \r\n                                                                <div className=\"profile__info_descr info_input\">{createField('', 'aboutMe', [], Input)}</div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"profile__info_item\">\r\n                                                                <div className=\"profile__info_descr\">Looking for a job description </div>\r\n                                                                <div className=\"profile__info_descr info_input\">{createField('my', 'lookingForAJobDescription', [], Input)}</div>\r\n                                                            </div>\r\n\r\n                                                            <div>{Object.keys(profile.contacts).map(key => {\r\n                                                                return (\r\n                                                                    <div key={key} className=\"profile__info_item\">\r\n                                                                        <div className=\"profile__info_descr\">{key}</div> \r\n                                                                        <div className=\"profile__info_descr info_input\">{createField(key, 'contacts.' + key, [], Input)}</div>\r\n                                                                    </div>\r\n                                                                )\r\n                                                            })}</div>\r\n                                                            <button className='save_info'>save</button>\r\n                                            </div>\r\n\r\n        </form>\r\n    );\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React, { useState, useEffect } from 'react';\r\nimport './Info.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\nconst Info = ({ profile, status, updateStatus, isOwner, saveProfile }) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(() => {\r\n            setEditMode(false);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"profile__info wrapper\">\r\n            {!profile\r\n                ? <Preloader />\r\n                : <>\r\n                    {editMode\r\n                        ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                        : <ProfileData profile={profile} isOwner={isOwner} status={status} updateStatus={updateStatus} runToEditMode={() => { setEditMode(true) }} />\r\n                    }\r\n                </>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ProfileData = ({ profile, isOwner, runToEditMode, status, updateStatus }) => {\r\n    const [showMode, setShowMode] = useState(false);\r\n\r\n    return (\r\n        <div className='profile__info'>\r\n            <div className=\"profile__name_info_wrapper\">\r\n                <div className=\"profile__name_wrapper\">\r\n                    <h1 className=\"profile__name\">{profile.fullName}</h1>\r\n                    <p className=\"online\">‚óè online</p>\r\n                </div>\r\n                <ProfileStatusWithHooks\r\n                    status={status}\r\n                    updateStatus={updateStatus}\r\n                />\r\n            </div>\r\n\r\n    \r\n            <div className=\"profile_detailInfo\">\r\n                <div className=\"profile__info_item\">Relationship: <span className='info_relationship'> {profile.lookingForAJob ? 'yes' : 'no'} </span></div>\r\n                {showMode ? <div className=\"profile__info_i\">{Object.keys(profile.contacts).map(key => <Contact className='profile__info_items' key={key} contactTitle={key} contactValue={profile.contacts[key]} />)}</div>\r\n                    : <></>\r\n                }\r\n            </div>\r\n\r\n            <div className=\"profile__info_optionsMode\">\r\n                {showMode ? <span className='showInfo' onClick={() => { setShowMode(false) }}>hidden info</span>\r\n                          : <span className='showInfo' onClick={() => { setShowMode(true) }}>show Info</span>}\r\n                {isOwner && <span className='editInfo' onClick={runToEditMode}>EDIT</span>}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return <div className=\"profile__info_item\"><div className=\"profile__info_descr\">{contactTitle}</div> <div className=\"profile__info_items info_input\">{contactValue}</div></div>\r\n}\r\n\r\nexport default Info;","import React from 'react';\r\nimport './Avatar.css';\r\nimport userAvatar from '../../../assets/users_avatar/users-avatar.svg';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\n\r\n\r\n\r\nconst Avatar = (props) => {\r\n    const onMainPhotoSelected = (e) => {\r\n        if(e.target.files.length){\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"profile__avatar wrapper\">\r\n            {!props.profile ? <Preloader />\r\n                : <>\r\n                    <div className=\"profile_avatar_img_wrap\"><img src={!props.profile.photos.large ? userAvatar : props.profile.photos.large} className=\"profile__avatar_img\" alt=\"avatar\" /></div>\r\n                    {props.isOwner \r\n                    ? <>\r\n                        <input type='file' id='input__file' className=\"profile__photo\" onChange={onMainPhotoSelected}/>\r\n                        <label htmlFor=\"input__file\" className=\"profile__edit\">\r\n                            <span>update photo</span>\r\n                        </label>\r\n                     </>\r\n                    : \r\n                        <label htmlFor=\"input__file\" className=\"profile__edit\">\r\n                            <span>follow</span>\r\n                        </label>\r\n                    }\r\n                </>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Avatar;","import React from 'react';\r\nimport './Post.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className=\"profile_posts wrapper item\">\r\n            <div className=\"profile__headerPost\">\r\n                <div className=\"profile__headerPost_wrapper\">\r\n                    <div className=\"profile__postAvatar\">\r\n                        <img src=\"https://sun9-49.userapi.com/c845122/v845122315/18e5e0/iAoBtrsGeFo.jpg\" alt=\"\" className=\"profile__postAvatar avatar\"/>\r\n                    </div>\r\n                    <div>\r\n                        <h2 className=\"profile__namePost\">{props.name}</h2>\r\n                        <p className=\"profile__post_time\">1 minute ago</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"profile__settingsPost\">‚óè‚óè‚óè</div>\r\n            </div>\r\n            <div className=\"profile__postBody\">\r\n                    {props.content}\r\n                    {/* /CONTENT */}\r\n            </div>\r\n            <div className=\"profile_postFoother\">\r\n    <div className=\"profile__postFeedback like\"><i className=\"fa fa-heart\" aria-hidden=\"true\"></i> {props.like}</div>\r\n    <div className=\"profile__postFeedback comment\"><i className=\"fa fa-comment\" aria-hidden=\"true\"></i> {props.comment}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Post;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './PostForm.css';\r\nimport {Field} from 'redux-form';\r\nimport {maxLength, required} from '../../../../utils/validators/validators';\r\nimport { Textarea } from '../../../common/FormsControls/FormsControls';\r\n\r\nconst maxLen = maxLength(1000);\r\n\r\nconst PostForm = (props) => {\r\n    return (\r\n        <form className=\"profile__inputPost_wrapper\" onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name={'newPostText'} className='profile__newpost' placeholder={'new post...'} validate={[required, maxLen]} />\r\n            <button className=\"profile__newpost_add\">add</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default PostForm;","import React from 'react';\r\nimport './Posts.css';\r\nimport Post from './Post/Post';\r\nimport PostForm from './PostForm/PostForm';\r\nimport { reduxForm } from 'redux-form';\r\n\r\nconst Posts = React.memo(props => {\r\n    let postsListItem = [...props.posts.postsData]\r\n        .map(item => <Post key={item.id} id={item.id} name={item.name} content={item.content} like={item.like} comment={item.comment} />).reverse();\r\n\r\n    const PostInputForm = reduxForm({ form: 'Post' })(PostForm);\r\n    const add = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"profile__createPost wrapper\">\r\n                <p>New post</p>\r\n                <PostInputForm onSubmit={add} />\r\n            </div>\r\n\r\n            <div className=\"posts__wrapper\">\r\n                {postsListItem}\r\n            </div>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default Posts;","import React from 'react';\r\nimport './Profile.css';\r\nimport Info from './Info/Info';\r\nimport Avatar from './Avatar/Avatar';\r\nimport Posts from './Posts/Posts';\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className=\"Profile\">\r\n            <div className=\"container\">\r\n                <div className=\"profile__user\">\r\n                    {!props.profile.profile ? <Preloader />\r\n                        : <>\r\n            \r\n                            <Avatar profile={props.profile.profile} isOwner={props.isOwner} savePhoto={props.savePhoto}/>\r\n\r\n                            <div className=\"profile__inner\">\r\n\r\n                                <Info\r\n                                    profile={props.profile.profile}\r\n                                    status={props.status}\r\n                                    updateStatus={props.updateStatus}\r\n                                    isOwner={props.isOwner}\r\n                                    saveProfile={props.saveProfile}\r\n                                />\r\n                                <Posts\r\n                                    posts={props.profile}\r\n                                    addPost={props.addPost}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport { setUserProfile, getProfileTC, getStatusTC, updateStatusTC, addPost, savePhoto, saveProfile } from '../../redux/profileReducer';\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refrashProfile(){\r\n        let usersId = this.props.match.params.userId;\r\n        if (!usersId) {\r\n            usersId = this.props.authorizedUserId;\r\n            if(!usersId){\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getProfileTC(usersId);\r\n        this.props.getStatusTC(usersId);\r\n    }\r\n    componentDidMount() {\r\n        this.refrashProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(this.props.match.params.userId != prevProps.match.params.userId)\r\n        this.refrashProfile();\r\n    }\r\n    render() {\r\n        return (\r\n            // !this.props.isAuth ? <Redirect to='/login' /> : \r\n            \r\n            <Profile {...this.props}\r\n                isOwner      ={!this.props.match.params.userId}\r\n                profile      ={this.props.profile}\r\n                posts        ={this.props.posts}\r\n                status       ={this.props.status}\r\n                updateStatus ={this.props.updateStatusTC}\r\n                addPost      ={this.props.addPost}\r\n                saveProfile  ={this.props.saveProfile}\r\n                savePhoto    ={this.props.savePhoto}\r\n            />\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profile,\r\n    status: state.profile.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose\r\n    (\r\n        connect(mapStateToProps, { setUserProfile, getProfileTC, getStatusTC, updateStatusTC, addPost, savePhoto, saveProfile}),\r\n        withRouter,\r\n    )(ProfileContainer);"],"sourceRoot":""}